{"version":3,"sources":["components/layouts/Header.js","actions/actionType.js","components/todo/AddTodo.js","actions/index.js","components/todo/TodoNav.js","components/todo/TodoItem.js","components/todo/TodoList.js","components/App.js","reducers/todos.js","reducers/index.js","reducers/showMode.js","index.js"],"names":["Header","className","React","Component","ADD_TODO_TO_BOTTOM","ADD_TODO_TO_TOP","DELETE_TODO","EDIT_TODO","SHOW_ALL","SHOW_COMPLETED","SHOW_UNCOMPLETED","AddTodo","props","handleChange","event","setState","state","inputText","target","value","handleAddToBottom","addTodoToBottom","handleAddToTop","addTodoToTop","type","placeholder","this","onChange","onClick","connect","dispatch","text","id","Date","now","TodoNav","todo","completedTodo","filter","item","isDone","uncompletedTodo","mode","showMode","role","showAll","length","showUncompleted","showCompleted","todos","TodoItem","editClickHandler","pervState","editMode","okClickHandler","editTodo","inputHandler","checked","deleteTodo","TodoList","getVisibleTodo","Error","map","App","getTodoFromLocalStorage","localStorage","getItem","JSON","parse","saveTodoToLocalStorage","setItem","stringify","combineReducers","action","console","log","store","createStore","reducers","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.491952a7.chunk.js","sourcesContent":["import React from 'react'\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <header>\n                <div className=\"navbar navbar-dark bg-dark shadow-sm\">\n                    <div className=\"container d-flex justify-content-between\">\n                        <p className=\"navbar-brand d-flex align-items-center\">\n                            <strong>Todo App</strong>\n                        </p>\n                    </div>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;","//todoes\nexport const ADD_TODO_TO_BOTTOM = \"ADD_TODO_TO_BOTTOM\"\nexport const ADD_TODO_TO_TOP = \"ADD_TODO_TO_TOP\"\nexport const DELETE_TODO = \"DELETE_TODO\"\nexport const EDIT_TODO = \"EDIT_TODO\"\n\n//show\nexport const SHOW_ALL = \"SHOW_ALL\"\nexport const SHOW_COMPLETED = \"SHOW_COMPLETED\"\nexport const SHOW_UNCOMPLETED = \"SHOW_UNCOMPLETED\"","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {addTodoToBottom, addTodoToTop} from \"../../actions\";\n\nclass AddTodo extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inputText: ''\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState(state => ({\n            ...state,\n            inputText: event.target.value\n        }));\n    }\n\n    handleAddToBottom = () => {\n        this.props.addTodoToBottom(this.state.inputText);\n        this.setState(state => ({\n            ...state,\n            inputText: ''\n        }));\n    }\n\n    handleAddToTop = () => {\n        this.props.addTodoToTop(this.state.inputText);\n        this.setState(state => ({\n            ...state,\n            inputText: ''\n        }));\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"container d-flex flex-column align-items-center\">\n                    <div className=\"form-inline\">\n                        <form className=\"form-group\">\n                            <input type=\"text\" className=\"form-control mx-sm-3\"\n                                   placeholder=\"i want to do ...\"\n                                   value={this.state.inputText} onChange={this.handleChange}/>\n                            <button className=\"btn btn-dark mr-1\" onClick={this.handleAddToBottom}>add to bottom\n                            </button>\n                            <button className=\"btn btn-dark\" onClick={this.handleAddToTop}>add to top</button>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addTodoToBottom: text => dispatch(addTodoToBottom(text)),\n        addTodoToTop: text => dispatch(addTodoToTop(text)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);","import {\n    ADD_TODO_TO_BOTTOM,\n    ADD_TODO_TO_TOP,\n    DELETE_TODO,\n    EDIT_TODO,\n    SHOW_ALL,\n    SHOW_COMPLETED,\n    SHOW_UNCOMPLETED,\n} from \"./actionType\";\n\nexport const addTodoToBottom = text => ({\n    type: ADD_TODO_TO_BOTTOM,\n    id: Date.now(),\n    text\n});\n\nexport const addTodoToTop = text => ({\n    type: ADD_TODO_TO_TOP,\n    id: Date.now(),\n    text\n})\n\nexport const deleteTodo = id => ({\n    type: DELETE_TODO,\n    id\n})\n\nexport const editTodo = (id, text, isDone) => ({\n    type: EDIT_TODO,\n    id,\n    text,\n    isDone\n})\n\n\nexport const showAll = () => ({\n    type: SHOW_ALL\n});\n\nexport const showCompleted = () => ({\n    type: SHOW_COMPLETED\n});\n\nexport const showUnCompleted = () => ({\n    type: SHOW_UNCOMPLETED\n});","import React from 'react'\nimport {connect} from 'react-redux'\nimport {showAll, showCompleted, showUnCompleted} from \"../../actions\";\nimport {SHOW_ALL, SHOW_COMPLETED, SHOW_UNCOMPLETED} from \"../../actions/actionType\";\n\nclass TodoNav extends React.Component {\n    render() {\n\n        let todo = this.props.todo\n        let completedTodo = todo.filter(item => item.isDone)\n        let uncompletedTodo = todo.filter(item => !item.isDone)\n\n        let mode = this.props.showMode;\n        return (\n            <nav className=\"col-6 mb-3\">\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <p className={`nav-item nav-link font-weight-bold ${mode === SHOW_ALL ? 'active' : ''}`}\n                       onClick={this.props.showAll}>\n                        all <span className=\"badge badge-secondary\">{todo.length}</span>\n                    </p>\n                    <p className={`nav-item nav-link font-weight-bold ${mode === SHOW_UNCOMPLETED ? 'active' : ''}`}\n                       onClick={this.props.showUncompleted}>\n                        undone <span className=\"badge badge-warning\">{uncompletedTodo.length}</span>\n                    </p>\n                    <p className={`nav-item nav-link font-weight-bold ${mode === SHOW_COMPLETED ? 'active' : ''}`}\n                       onClick={this.props.showCompleted}>\n                        done <span className=\"badge badge-success\">{completedTodo.length}</span>\n                    </p>\n                </div>\n            </nav>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        todo: state.todos,\n        showMode: state.showMode\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showAll: () => dispatch(showAll()),\n        showCompleted: () => dispatch(showCompleted()),\n        showUncompleted: () => dispatch(showUnCompleted())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoNav);","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {deleteTodo, editTodo} from \"../../actions\";\n\nclass TodoItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.id,\n            text: this.props.text,\n            isDone: this.props.isDone,\n            editMode: false\n        }\n    }\n\n    editClickHandler = event => {\n        this.setState(pervState => ({\n                ...pervState,\n                editMode: true\n            })\n        )\n    }\n\n    okClickHandler = event => {\n        this.props.editTodo(this.state.id, this.state.text, this.state.isDone)\n\n        this.setState(pervState => ({\n                ...pervState,\n                editMode: false\n            })\n        )\n    }\n\n    inputHandler = event => {\n        this.setState(pervState => ({\n            text: event.target.value,\n        }))\n    }\n\n\n    render() {\n        //props\n        this.id = this.props.id\n        this.text = this.props.text;\n        this.isDone = this.props.isDone;\n\n        return (\n            !this.state.editMode\n                ?\n                <div className=\"col-6 mb-2\">\n                    <div className=\"d-flex justify-content-between align-items-center border rounded p-3\">\n                        <div className=\"d-flex align-items-center\">\n                            <input type=\"checkbox\" className=\"todoCheckbox\" checked={this.isDone}\n                                   onChange={() => this.props.editTodo(this.id, this.text, !this.isDone)}/>\n                            <span>{this.text}</span>\n                        </div>\n                        <div>\n                            <button type=\"button\"\n                                    className={`btn btn-info btn-sm ${this.isDone ? 'hide' : ''}`}\n                                    onClick={this.editClickHandler}>edit\n                            </button>\n                            <button type=\"button\" className=\"btn btn-danger btn-sm ml-1\"\n                                    onClick={() => this.props.deleteTodo(this.id)}>delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                :\n                <div className=\"col-6 mb-2\">\n                    <div className=\"d-flex justify-content-between align-items-center border rounded p-3\">\n                        <div className=\"d-flex align-items-center\">\n                            <input value={this.state.text} onChange={this.inputHandler} className=\"form-control\"/>\n                        </div>\n                        <div>\n                            <button type=\"button\"\n                                    className={`btn btn-success btn-sm`}\n                                    onClick={this.okClickHandler}>OK\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteTodo: id => dispatch(deleteTodo(id)),\n        editTodo: (id, text, isDone) => dispatch(editTodo(id, text, isDone))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import React from 'react'\nimport {connect} from \"react-redux\";\n\n//css\nimport './todo.css'\n\n//components\nimport TodoNav from \"./TodoNav\";\nimport TodoItem from \"./TodoItem\";\n\n//constants\nimport {SHOW_ALL, SHOW_UNCOMPLETED, SHOW_COMPLETED} from \"../../actions/actionType\"\n\nclass TodoList extends React.Component {\n\n    getVisibleTodo = (showMode) => {\n        let todos = this.props.todos;\n\n        switch (showMode) {\n            case SHOW_ALL:\n                return todos;\n\n            case SHOW_COMPLETED:\n                return todos.filter(item => item.isDone);\n\n            case SHOW_UNCOMPLETED:\n                return todos.filter(item => !item.isDone)\n\n            default:\n                throw new Error(\"something goes wrong in show mode!\")\n        }\n    }\n\n    render() {\n        let todos = this.getVisibleTodo(this.props.showMode)\n\n        return (\n            <div className=\"container\">\n                <div className=\"d-flex flex-column align-items-center \">\n                    <TodoNav/>\n                    {\n                        todos.map(todo => <TodoItem key={todo.id} {...todo}/>)\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        todos: state.todos,\n        showMode: state.showMode\n    }\n}\n\n\nexport default connect(mapStateToProps)(TodoList);","import React from 'react'\n\n//bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n//components\nimport Header from './layouts/Header'\nimport AddTodo from './todo/AddTodo'\nimport TodoList from './todo/TodoList'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <main>\n                    <section className=\"jumbotron\">\n                        <div className=\"container d-flex flex-column align-items-center\">\n                            <h1 className=\"jumbotron-heading\">Welcome!</h1>\n                            <p className=\"lead text-muted\">To get started, add some items to your list:</p>\n                            <AddTodo/>\n                        </div>\n                    </section>\n                    <TodoList/>\n                </main>\n            </>\n        )\n    }\n}\n\nexport default App;\n","import {ADD_TODO_TO_BOTTOM, ADD_TODO_TO_TOP, DELETE_TODO, EDIT_TODO} from '../actions/actionType'\n\nfunction getTodoFromLocalStorage() {\n    const todo = localStorage.getItem('todo')\n    return todo == null ? [] : JSON.parse(todo);\n}\n\nfunction saveTodoToLocalStorage(todo) {\n    localStorage.setItem('todo', JSON.stringify(todo))\n}\n\nexport const todos = (state = getTodoFromLocalStorage(), action) => {\n    let todo = null\n\n    switch (action.type) {\n\n        case ADD_TODO_TO_BOTTOM:\n            todo = [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    isDone: false,\n                }\n            ]\n            saveTodoToLocalStorage(todo)\n            return todo\n\n        case ADD_TODO_TO_TOP:\n            todo = [\n                {\n                    id: action.id,\n                    text: action.text,\n                    isDone: false\n                },\n                ...state\n            ]\n            console.log(todo)\n            saveTodoToLocalStorage(todo)\n            return todo\n\n\n        case DELETE_TODO:\n            todo = state.filter(item => item.id !== action.id);\n            saveTodoToLocalStorage(todo)\n            return todo\n\n        case EDIT_TODO:\n            todo = state.map(todo =>\n                (todo.id === action.id)\n                    ? {\n                        id: action.id,\n                        text: action.text,\n                        isDone: action.isDone\n                    }\n                    : todo\n            )\n            saveTodoToLocalStorage(todo)\n            return todo\n\n\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport {todos} from \"./todos\";\nimport {showMode} from \"./showMode\";\n\nexport default combineReducers({\n    todos,\n    showMode\n})\n","import {SHOW_ALL, SHOW_COMPLETED, SHOW_UNCOMPLETED} from '../actions/actionType'\n\n\nexport const showMode = (state = SHOW_ALL, action) => {\n    switch (action.type) {\n\n        case SHOW_ALL:\n            return SHOW_ALL\n\n\n        case SHOW_COMPLETED:\n            return SHOW_COMPLETED\n\n\n        case SHOW_UNCOMPLETED:\n            return SHOW_UNCOMPLETED\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport reducers from './reducers';\n\n//just for development\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(reducers, composeWithDevTools())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}